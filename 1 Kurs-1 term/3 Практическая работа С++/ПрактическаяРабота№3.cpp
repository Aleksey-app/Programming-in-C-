// ПрактическаяРабота№3.cpp 
#include <iostream>
#include <iomanip>
#include <Windows.h>
using namespace std;
void print(int A[6][6], int n) {
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setw(4) << A[i][j];
		cout << endl;
	}
}
void random(int A[6][6], int x) {
	int *end = A[0] + x * x - 1; //указатель на последний элемент массива
	srand(time(0));
	for (int *ptr = A[0], i = 1; ptr <= end; ptr++, i++)
		*ptr = rand() % (x*x) + 1;
}
void calculator(int A[6][6], int p) {
	int x = 0, y = 0;
	int *end = A[0] + p * p - 1;
	cout << "\n Vvidite celoe chislo \n";
	cin >> x;
	cin.sync();
	int *vi = &x;
	cout << "\n Vibraty operacu " << "\n 0 vichetanie\n 1 slogenie\n 2 umnogenie\n 3 delenie\n";
	cin >> y;
	cin.sync();
	switch (y)
	{
	case 0:
		for (int *ptr = A[0], i = 1; ptr <= end; ptr++, i++)
			*ptr -= *vi;
		break; cout << "\n ERROR\n";
	case 1: {
		for (int *ptr = A[0], i = 1; ptr <= end; ptr++, i++)
			*ptr += *vi; }
			break; cout << "\n ERROR\n";
	case 2: {
		for (int *ptr = A[0], i = 1; ptr <= end; ptr++, i++)
			*ptr *= *vi; }
			break; cout << "\n ERROR\n";
	case 3: {
		for (int *ptr = A[0], i = 1; ptr <= end; ptr++, i++)
			*ptr /= *vi; }
			break; cout << "\n ERROR\n";
	}
}
void VIVOD(int A[6][6]) {
	int u = 0;
	switch (u)
	{
	case 0: for (int i = 0; i <= 5; i++) {
		cout << setw(4) << A[i][0] << "\n";
		Sleep(500); u++;
	}
	case 1:
	{system("cls");
	cout << setw(4) << A[0][0] << "\n";
	cout << setw(4) << A[1][0] << "\n";
	cout << setw(4) << A[2][0] << "\n";
	cout << setw(4) << A[3][0] << "\n";
	cout << setw(4) << A[4][0] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 2:
	{system("cls");
	cout << setw(4) << A[0][0] << "\n";
	cout << setw(4) << A[1][0] << "\n";
	cout << setw(4) << A[2][0] << "\n";
	cout << setw(4) << A[3][0] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 3:
	{system("cls");
	cout << setw(4) << A[0][0] << "\n";
	cout << setw(4) << A[1][0] << "\n";
	cout << setw(4) << A[2][0] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 4:
	{system("cls");
	cout << "  " << A[0][0] << "\n";
	cout << "  " << A[1][0] << "\n";
	cout << "  " << A[2][0] << "\t" << A[2][1] << "\n";
	cout << "  " << A[3][0] << "\t" << A[3][1] << "\n";
	cout << "  " << A[4][0] << "\t" << A[4][1] << "\n";
	cout << "  " << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 5:
	{system("cls");
	cout << "  " << A[0][0] << "\n";
	cout << "  " << A[1][0] << "\t" << A[1][1] << "\n";
	cout << "  " << A[2][0] << "\t" << A[2][1] << "\n";
	cout << "  " << A[3][0] << "\t" << A[3][1] << "\n";
	cout << "  " << A[4][0] << "\t" << A[4][1] << "\n";
	cout << "  " << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 6:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 7:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 8:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 9:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 10:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 11:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\n";
	Sleep(500); u++; }
	case 12:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\n";
	Sleep(500); u++; }
	case 13:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 14:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 15:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 16:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 17:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 18:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 19:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 20:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 21:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 22:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 23:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\n";
	Sleep(500); u++; }
	case 24:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\n";
	Sleep(500); u++; }
	case 25:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); u++; }
	case 26:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\t" << A[4][5] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); u++; }
	case 27:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\t" << A[3][5] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\t" << A[4][5] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); u++; }
	case 28:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\t" << A[2][5] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\t" << A[3][5] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\t" << A[4][5] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); u++; }
	case 29:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\t" << A[1][5] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\t" << A[2][5] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\t" << A[3][5] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\t" << A[4][5] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); u++; }
	case 30:
	{system("cls");
	cout << setw(4) << A[0][0] << "\t" << A[0][1] << "\t" << A[0][2] << "\t" << A[0][3] << "\t" << A[0][4] << "\t" << A[0][5] << "\n";
	cout << setw(4) << A[1][0] << "\t" << A[1][1] << "\t" << A[1][2] << "\t" << A[1][3] << "\t" << A[1][4] << "\t" << A[1][5] << "\n";
	cout << setw(4) << A[2][0] << "\t" << A[2][1] << "\t" << A[2][2] << "\t" << A[2][3] << "\t" << A[2][4] << "\t" << A[2][5] << "\n";
	cout << setw(4) << A[3][0] << "\t" << A[3][1] << "\t" << A[3][2] << "\t" << A[3][3] << "\t" << A[3][4] << "\t" << A[3][5] << "\n";
	cout << setw(4) << A[4][0] << "\t" << A[4][1] << "\t" << A[4][2] << "\t" << A[4][3] << "\t" << A[4][4] << "\t" << A[4][5] << "\n";
	cout << setw(4) << A[5][0] << "\t" << A[5][1] << "\t" << A[5][2] << "\t" << A[5][3] << "\t" << A[5][4] << "\t" << A[5][5] << "\n";
	Sleep(500); }
	}

}
void Sortirovka(int A[6][6], int n) {
	for (int i = 0; i < n*n; i++)
	{
		for (int j = (n*n) - 1; j > i; j--)
		{
			if (((int *)A)[j] < ((int *)A)[j - 1])
			{
				int temp = ((int *)A)[j];
				((int *)A)[j] = ((int *)A)[j - 1];
				((int *)A)[j - 1] = temp;
			}
		}
	}
}

int main()
{
	const int n = 6;
	const int m = 6;
	int t = n / 2;
	int A[n][m], B1[n][m], B2[n][m], B3[n][m], B4[n][m], C[n][m], tmp, next;
	random(A, n);
	VIVOD(A);

	cout << "\t Original \n";			//Вывод оригинальной матрицы.
	print(A, n);
	for (int i = 0; i < n; i++) {//Делю оригинальный двумерный массив на 4 части. B1 [0-2][0-2] B2[0-2][3-5]
		for (int j = 0; j < n; j++) {				// B3[3-5][3-5] B4[3-5][0-2]

			if (i < t && j < t)
				B1[i][j] = A[i][j];

			else
				if (i < t && j >= t)
					B2[i][j - t] = A[i][j];

				else
					if (i >= t && j >= t)
						B3[i - t][j - t] = A[i][j];

					else
						if (i >= t && j < t)
							B4[i - t][j] = A[i][j];

		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {

			if (i < t && j < t)
				C[i][j] = B4[i][j];

			else
				if (i < t && j >= t)
					C[i][j] = B1[i][j - t];

				else
					if (i >= t && j >= t)
						C[i][j] = B2[i - t][j - t];

					else
						if (i >= t && j < t)
							C[i][j] = B3[i - t][j];

		}
	}
	cout << "\t Option a\n";
	print(C, n);
	for (int i = 0; i < n / 2; i++)								//меняю местами блоки крест на крест "просто решил попробовать и получилось"  другим способом,
		for (int j = 0; j < n / 2; j++)							//в сторчках кода короче но для 3х заданий запарно.
		{
			tmp = A[i][j];
			A[i][j] = A[i + (n + 1) / 2][j + (n + 1) / 2];
			A[i + (n + 1) / 2][j + (n + 1) / 2] = tmp;
		}

	for (int i = 0; i < n / 2; i++)
		for (int j = (n + 1) / 2; j < n; j++)
		{
			tmp = A[i][j];
			A[i][j] = A[i + (n + 1) / 2][j - (n + 1) / 2];
			A[i + (n + 1) / 2][j - (n + 1) / 2] = tmp;
		}
	cout << "\t Option b\n";
	print(A, n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {							//Это задание переставить блоки С

			if (i < t && j < t)									// имея массивы B1,B2,B3,B4 переставлять легко.
				C[i][j] = B4[i][j];

			else
				if (i < t && j >= t)
					C[i][j] = B3[i][j - t];

				else
					if (i >= t && j >= t)
						C[i][j] = B2[i - t][j - t];

					else
						if (i >= t && j < t)
							C[i][j] = B1[i - t][j];

		}
	}
	cout << "\t Option c\n";
	print(C, n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {							//Это задание переставить блоки D

			if (i < t && j < t)
				C[i][j] = B2[i][j];

			else
				if (i < t && j >= t)
					C[i][j] = B1[i][j - t];

				else
					if (i >= t && j >= t)
						C[i][j] = B4[i - t][j - t];

					else
						if (i >= t && j < t)
							C[i][j] = B3[i - t][j];

		}
	}
	cout << "\t Option d\n";
	print(C, n);
	Sortirovka(A, n);
	cout << "\t Sortirovka\n";
	print(A, n);
M1:
	calculator(A, n);
	cout << "\n Itogo\n";
	print(A, n);
	cout << "\n next calculator 4\n GEME OVER 5\n";
	cin >> next;
	cin.sync();
	switch (next)
	{
	case 4: goto M1;
	case 5: return 0;
		break; cout << "\n ERROR\n";
	}
	return 0;
}